name: Sync Issue Info to PR

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  sync-issue-info:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Extract issue number from PR body
        id: extract_issue
        run: |
          # Fetch PR body
          PR_BODY=$(curl -s -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}" \
            | jq -r '.body')

          # Echo PR body to confirm its content
          echo "PR Body: $PR_BODY"

          # Extract issue number from PR body using regex (customize if needed)
          ISSUE_NUMBER=$(echo "$PR_BODY" | grep -oP '#\d+' | head -1 | sed 's/#//')

          # Echo the extracted issue number to confirm it's correct
          echo "Extracted Issue Number: $ISSUE_NUMBER"

          echo "ISSUE_NUMBER=$ISSUE_NUMBER" >> $GITHUB_ENV

      - name: Fetch issue details and update PR
        run: |
          issue_number=${{ env.issue_number }}

          # Get assignees, labels, projects, and milestone from the issue
          assignees=$(curl -s -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$issue_number" \
            | jq -r '.assignees[].login' | paste -s -d ',' -)

          labels=$(curl -s -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$issue_number" \
            | jq -r '.labels[].name' | paste -s -d ',' -)

          projects=$(curl -s -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$issue_number" \
            | jq -r '.projectsV2.nodes[].title' | paste -s -d ',' -)

          milestone=$(curl -s -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$issue_number" \
            | jq -r '.milestone.title')

          # Update PR with these details
          if [ -n "$assignees" ]; then
            curl -X PATCH -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}" \
              -d "{\"assignees\": [$assignees]}"
          fi
          if [ -n "$labels" ]; then
            curl -X PATCH -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}" \
              -d "{\"labels\": [$labels]}"
          fi
          if [ -n "$projects" ]; then
            curl -X PATCH -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}" \
              -d "{\"projects\": [$projects]}"
          fi
          if [ -n "$milestone" ]; then
            curl -X PATCH -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}" \
              -d "{\"milestone\": \"$milestone\"}"
          fi

          # Set the project status to "In Review" for both Issue and PR
          project_id=$(curl -s -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$issue_number" \
            | jq -r '.projectsV2.nodes[0].id')

          if [ -n "$project_id" ]; then
            curl -X PATCH -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
              "https://api.github.com/projects/v2/items/${project_id}/fields" \
              -d '{"status": "In Review"}'
          fi

          # Connect the PR to the Issue (Development column)
          curl -X POST -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${issue_number}/events" \
            -d '{"event": "linked"}'
