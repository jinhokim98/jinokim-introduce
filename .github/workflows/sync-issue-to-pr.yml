name: Sync Issue Info to PR

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  sync-issue-info:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      # 1. Git 리포지토리 체크아웃
      - name: Checkout the code
        uses: actions/checkout@v3

      # 2. 브랜치 이름 추출 (#123 -> 123)
      - name: Extract issue number from PR body
        id: extract_issue
        run: |
          # Fetch PR body
          PR_BODY=$(curl -s -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}" \
            | jq -r '.body')
          # Extract issue number from PR body using regex (customize if needed)
          ISSUE_NUMBER=$(echo "$PR_BODY" | grep -oP '#\d+' | head -1 | sed 's/#//')
          echo "ISSUE_NUMBER=$ISSUE_NUMBER" >> $GITHUB_ENV

      # 3. Assignees action을 발생시킨 유저로 추가
      - name: Add Assignees
        uses: kentaro-m/auto-assign-action@v2.0.0
        with:
          configuration-path: '.github/auto_assign.yml'

      # 4. Issue에 설정돼있는 Labels와 Milestone을 PR에 추가
      - name: Add Labels and Milestone From Issue
        if: env.ISSUE_NUMBER != ''
        env:
          GITHUB_TOKEN: ${{ secrets.CONFIG_SUBMODULE_TOKEN }}
        run: |
          response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ env.ISSUE_NUMBER }})

          # Extract issue_labels
          issue_labels=$(echo "$response" | jq -r '.labels // [] | map(.name) | @json')
          echo "Extracted Labels: $issue_labels"

          # Extract milestone
          issue_milestone=$(echo "$response" | jq -r '.milestone.number // empty')
          echo "Extracted Milestone: $issue_milestone"

          # Assign labels to PR
          echo "Assigning labels to PR #${{ github.event.pull_request.number }}"
          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels \
            -d "$(jq -n --argjson labels "$issue_labels" '{"labels": $labels}')"

          # Assign milestone to PR
          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }} \
            -d "$(jq -n --argjson milestone "$issue_milestone" '{"milestone": $milestone}')"

  link-project:
    name: Link Project and Set Status "In Review"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/add-to-project@main
        id: addItem
        with:
          project-url: https://github.com/users/jinhokim98/projects/1
          github-token: ${{ secrets.CONFIG_SUBMODULE_TOKEN }}

      - uses: kalgurn/update-project-item-status@main
        with:
          project-url: https://github.com/users/jinhokim98/projects/1
          github-token: ${{ secrets.CONFIG_SUBMODULE_TOKEN }}
          item-id: ${{ steps.addItem.outputs.itemId }}
          status: 'In Review'
