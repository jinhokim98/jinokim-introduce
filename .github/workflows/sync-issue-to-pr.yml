name: Sync Issue Info to PR

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  sync-issue-info:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Extract issue number from PR body
        id: extract_issue
        run: |
          # Fetch PR body
          PR_BODY=$(curl -s -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}" \
            | jq -r '.body')
          # Extract issue number from PR body using regex (customize if needed)
          ISSUE_NUMBER=$(echo "$PR_BODY" | grep -oP '#\d+' | head -1 | sed 's/#//')
          echo "ISSUE_NUMBER=$ISSUE_NUMBER" >> $GITHUB_ENV

      - name: Fetch issue details
        run: |
          # Get assignees, labels, projects, and milestone from the issue
          assignees=$(curl -s -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ env.ISSUE_NUMBER }}" \
            | jq -r '.assignees[].login' | paste -s -d ',' -)
          echo "ASSIGNEES=$assignees" >> $GITHUB_ENV

          labels=$(curl -s -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ env.ISSUE_NUMBER }}" \
            | jq -r '.labels[].name' | paste -s -d ',' -)
          echo "LABELS=$labels" >> $GITHUB_ENV

          projects="my-project"
          echo "PROJECTS=$projects" >> $GITHUB_ENV

          milestone=$(curl -s -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ env.ISSUE_NUMBER }}" \
            | jq -r '.milestone.title')
          echo "MILESTONE=$milestone" >> $GITHUB_ENV

      - name: Update PR with fetched details
        run: |
          if [ -n "${{ env.ASSIGNEES }}" ]; then
            curl -X PATCH -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}" \
              -d "{\"assignees\": [${{ env.ASSIGNEES }}]}"
          fi
          if [ -n "${{ env.LABELS }}" ]; then
            curl -X PATCH -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}" \
              -d "{\"labels\": [${{ env.LABELS }}]}"
          fi
          if [ -n "${{ env.PROJECTS }}" ]; then
            curl -X PATCH -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}" \
              -d "{\"projects\": [${{ env.PROJECTS }}]}"
          fi
          if [ -n "${{ env.MILESTONE }}" ]; then
            curl -X PATCH -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}" \
              -d "{\"milestone\": \"${{ env.MILESTONE }}\"}"
          fi

          # Connect the PR to the Issue (Development column)
          curl -X POST -H "Authorization: token ${{ secrets.CONFIG_SUBMODULE_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ env.ISSUE_NUMBER }}/events" \
            -d '{"event": "linked"}'
